name: release
on:
  push:
    branches:
      - master
    tags:
      - "v*"
jobs:
  build:
    name: build release assets
    runs-on: ${{ matrix.config.os }}
    env: ${{ matrix.config.env }}
    strategy:
      matrix:
        config:
          - { os: "ubuntu-latest", arch: "amd64", extension: "", env: {} }
          - { os: "macos-latest", arch: "amd64", extension: "", env: {} }
          - { os: "windows-latest", arch: "amd64", extension: ".exe", env: {} }
    steps:
      - uses: actions/checkout@v2

      - name: set the release version (tag)
        if: startsWith(github.ref, 'refs/tags/v')
        shell: bash
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF/refs\/tags\//}

      - name: set the release version (master)
        if: github.ref == 'refs/heads/master'
        shell: bash
        run: echo ::set-env name=RELEASE_VERSION::canary

      - name: lowercase the runner OS name
        shell: bash
        run: |
          OS=$(echo "${{ runner.os }}" | tr '[:upper:]' '[:lower:]')
          echo ::set-env name=RUNNER_OS::$OS

      # hack: install rustfmt to work around darwin toolchain issues
      - name: "(macOS) install dev tools"
        if: runner.os == 'macOS'
        run: |
          rustup component add rustfmt --toolchain stable-x86_64-apple-darwin
          rustup component add clippy --toolchain stable-x86_64-apple-darwin
          rustup update stable

      - name: build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: "--all-features --release"

      - name: package release assets
        shell: bash
        run: |
          mkdir _dist
          cp README.md LICENSE.txt target/release/bindle${{ matrix.config.extension }} target/release/bindle-server${{ matrix.config.extension }} target/release/cargo2bindle${{ matrix.config.extension }} target/release/as2bindle${{ matrix.config.extension }} _dist/
          cd _dist
          tar czf bindle-${{ env.RELEASE_VERSION }}-${{ env.RUNNER_OS }}-${{ matrix.config.arch }}.tar.gz README.md LICENSE.txt bindle${{ matrix.config.extension }} bindle-server${{ matrix.config.extension }} cargo2bindle${{ matrix.config.extension }} as2bindle${{ matrix.config.extension }}

      - uses: actions/upload-artifact@v1
        with:
          name: bindle
          path: _dist/bindle-${{ env.RELEASE_VERSION }}-${{ env.RUNNER_OS }}-${{ matrix.config.arch }}.tar.gz
  publish:
    name: publish release assets
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: set the release version
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF/refs\/tags\//}
      - name: set the release version
        if: github.ref == 'refs/heads/master'
        run: echo ::set-env name=RELEASE_VERSION::canary
      - name: download release assets
        uses: actions/download-artifact@v1
        with:
          name: bindle
      - name: generate checksums
        run: |
          cd bindle
          sha256sum * > checksums-${{ env.RELEASE_VERSION }}.txt
      - name: upload to azure
        uses: bacongobbler/azure-blob-storage-upload@main
        with:
          source_dir: bindle
          container_name: releases
          connection_string: ${{ secrets.AzureStorageConnectionString }}
          sync: false
